env:
  es6: true
  node: true

extends:
  - 'plugin:@ianwremmel/ianwremmel/modern'
  - 'plugin:@ianwremmel/ianwremmel/react'
  - 'plugin:jsx-a11y/recommended'
  - 'plugin:storybook/recommended'
  - '@remix-run/eslint-config'
  - '@remix-run/eslint-config/node'
  - 'plugin:react/recommended'
  - 'prettier'

ignorePatterns:
  - '!.storybook'

overrides:
  # make sure eslint lints all files
  - files:
      - '**/*.js'
      - '**/*.jsx'
      - '**/*.ts'
      - '**/*.tsx'

  - extends:
      - 'plugin:@ianwremmel/ianwremmel/typescript'
    files:
      - '**/*.ts'
      - '**/*.tsx'
    rules:
      '@typescript-eslint/consistent-type-definitions':
        - error
        - interface
      no-shadow: off
      '@typescript-eslint/no-shadow': error
      no-use-before-define: off
      '@typescript-eslint/no-use-before-define':
        - error
        - classes: true
          functions: false
          variables: true

  - files: ['**/*.js']
    parserOptions:
      sourceType: script

  - files: ['server.js']
    parserOptions:
      sourceType: module

parserOptions:
  ecmaFeatures:
    jsx: true

plugins:
  - jsx-a11y
  - react

rules:
  import/no-unassigned-import:
    - error
    - allow:
        - '**/*.css'
        - '**/*.scss'
  no-restricted-syntax: off
  require-jsdoc: off
  react/react-in-jsx-scope: off
  # This rule seems like a remnant of a bad time in the frontend world. It's mostly just annoying without providing any
  # technical benefit and only minimal opportunity to prevent mistakes.
  react/no-unescaped-entities: off

settings:
  react:
    version: 'detect'
  linkComonents:
    - name: 'Link'
      linkAttribute: 'href'

